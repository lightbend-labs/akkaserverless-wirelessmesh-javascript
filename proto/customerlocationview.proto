/*
 * Copyright 2021 Lightbend Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

syntax = "proto3";

import "google/protobuf/any.proto";
import "google/protobuf/empty.proto";
import "google/api/annotations.proto";
import "akkaserverless/annotations.proto";

package customerlocationview;

import "domain/wirelessmeshdomain.proto";

message CustomerLocationByEmailRequest {
    string email = 1;
}

message CustomerLocationDto {
  string customer_location_id = 1;
  string email = 2;
}

service CustomerLocationByEmailService {
    rpc UpdateCustomerLocation(wirelessmeshdomain.CustomerLocationAdded) returns (CustomerLocationDto) {
        option (akkaserverless.method).eventing = {
          in: {
            event_sourced_entity: "customer-location-entity"
          }
        };
        option (akkaserverless.method).view.update = {
          table: "customer_locations"
          transform_updates: true
        };
    }

    rpc GetCustomerLocationByEmail(CustomerLocationByEmailRequest) returns (stream CustomerLocationDto) {
        option (akkaserverless.method).view.query = {
          query: "SELECT * FROM customer_locations WHERE email = :email"
        };
        option (google.api.http) = {
          get: "/wirelessmesh/customer-locations"
        };
    }

    // handle other events which are not managed above
    rpc CatchOthers(google.protobuf.Any) returns (google.protobuf.Empty) {
      option (akkaserverless.method).eventing.in = {
          event_sourced_entity:  "customer-location-entity"
       };
    };
}
